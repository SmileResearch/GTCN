{
    "Function": "selftest",
    "astEdges": [
        [
            15,
            17
        ],
        [
            15,
            16
        ],
        [
            8,
            9
        ],
        [
            6,
            7
        ],
        [
            57,
            58
        ],
        [
            5,
            6
        ],
        [
            5,
            8
        ],
        [
            21,
            22
        ],
        [
            55,
            56
        ],
        [
            55,
            60
        ],
        [
            68,
            69
        ],
        [
            68,
            70
        ],
        [
            81,
            82
        ],
        [
            23,
            25
        ],
        [
            23,
            30
        ],
        [
            23,
            29
        ],
        [
            23,
            51
        ],
        [
            23,
            34
        ],
        [
            23,
            24
        ],
        [
            23,
            55
        ],
        [
            23,
            68
        ],
        [
            12,
            13
        ],
        [
            12,
            14
        ],
        [
            35,
            36
        ],
        [
            35,
            37
        ],
        [
            51,
            52
        ],
        [
            51,
            54
        ],
        [
            61,
            65
        ],
        [
            61,
            63
        ],
        [
            61,
            64
        ],
        [
            61,
            62
        ],
        [
            42,
            43
        ],
        [
            42,
            45
        ],
        [
            42,
            44
        ],
        [
            34,
            35
        ],
        [
            34,
            38
        ],
        [
            65,
            66
        ],
        [
            52,
            53
        ],
        [
            10,
            23
        ],
        [
            10,
            21
        ],
        [
            10,
            11
        ],
        [
            10,
            18
        ],
        [
            39,
            42
        ],
        [
            39,
            40
        ],
        [
            39,
            46
        ],
        [
            39,
            41
        ],
        [
            80,
            81
        ],
        [
            25,
            27
        ],
        [
            25,
            26
        ],
        [
            46,
            49
        ],
        [
            46,
            47
        ],
        [
            46,
            48
        ],
        [
            11,
            15
        ],
        [
            11,
            12
        ],
        [
            71,
            75
        ],
        [
            71,
            73
        ],
        [
            71,
            72
        ],
        [
            71,
            74
        ],
        [
            32,
            33
        ],
        [
            18,
            20
        ],
        [
            18,
            19
        ],
        [
            30,
            31
        ],
        [
            30,
            32
        ],
        [
            2,
            80
        ],
        [
            2,
            78
        ],
        [
            2,
            71
        ],
        [
            2,
            5
        ],
        [
            2,
            76
        ],
        [
            2,
            4
        ],
        [
            2,
            3
        ],
        [
            2,
            10
        ],
        [
            2,
            79
        ],
        [
            76,
            77
        ],
        [
            56,
            57
        ],
        [
            56,
            59
        ],
        [
            0,
            83
        ],
        [
            0,
            1
        ],
        [
            0,
            2
        ],
        [
            60,
            67
        ],
        [
            60,
            61
        ],
        [
            27,
            28
        ],
        [
            38,
            39
        ],
        [
            38,
            50
        ]
    ],
    "candidateNodeList": [
        7,
        13,
        16,
        19,
        20,
        22,
        26,
        28,
        31,
        33,
        36,
        37,
        41,
        43,
        47,
        53,
        58,
        59,
        63,
        64,
        66,
        69,
        70,
        73,
        74,
        75,
        82
    ],
    "cfgEdges": [],
    "ddgEdges": [],
    "ncsEdges": [
        [
            1,
            3
        ],
        [
            3,
            4
        ],
        [
            4,
            7
        ],
        [
            7,
            9
        ],
        [
            9,
            13
        ],
        [
            13,
            14
        ],
        [
            14,
            16
        ],
        [
            16,
            17
        ],
        [
            17,
            19
        ],
        [
            19,
            20
        ],
        [
            20,
            22
        ],
        [
            22,
            24
        ],
        [
            24,
            26
        ],
        [
            26,
            28
        ],
        [
            28,
            29
        ],
        [
            29,
            31
        ],
        [
            31,
            33
        ],
        [
            33,
            36
        ],
        [
            36,
            37
        ],
        [
            37,
            40
        ],
        [
            40,
            41
        ],
        [
            41,
            43
        ],
        [
            43,
            44
        ],
        [
            44,
            45
        ],
        [
            45,
            47
        ],
        [
            47,
            48
        ],
        [
            48,
            49
        ],
        [
            49,
            50
        ],
        [
            50,
            53
        ],
        [
            53,
            54
        ],
        [
            54,
            58
        ],
        [
            58,
            59
        ],
        [
            59,
            62
        ],
        [
            62,
            63
        ],
        [
            63,
            64
        ],
        [
            64,
            66
        ],
        [
            66,
            67
        ],
        [
            67,
            69
        ],
        [
            69,
            70
        ],
        [
            70,
            72
        ],
        [
            72,
            73
        ],
        [
            73,
            74
        ],
        [
            74,
            75
        ],
        [
            75,
            77
        ],
        [
            77,
            78
        ],
        [
            78,
            79
        ],
        [
            79,
            82
        ]
    ],
    "nodeList": {
        "0": "METHOD",
        "1": "PARAM",
        "2": "BLOCK",
        "3": "LOCAL",
        "4": "LOCAL",
        "5": "CONTROL_STRUCTURE",
        "6": "<operator>.logicalNot",
        "7": "max",
        "8": "RETURN",
        "9": "LITERAL",
        "10": "CONTROL_STRUCTURE",
        "11": "BLOCK",
        "12": "<operator>.assignment",
        "13": "last",
        "14": "LITERAL",
        "15": "<operator>.assignment",
        "16": "x",
        "17": "LITERAL",
        "18": "<operator>.lessThan",
        "19": "x",
        "20": "max",
        "21": "<operator>.postIncrement",
        "22": "x",
        "23": "BLOCK",
        "24": "LOCAL",
        "25": "<operator>.assignment",
        "26": "slow",
        "27": "slow_is_prime_number",
        "28": "x",
        "29": "LOCAL",
        "30": "<operator>.assignment",
        "31": "fast",
        "32": "is_prime_number",
        "33": "x",
        "34": "CONTROL_STRUCTURE",
        "35": "<operator>.notEquals",
        "36": "slow",
        "37": "fast",
        "38": "BLOCK",
        "39": "pr_err",
        "40": "LITERAL",
        "41": "x",
        "42": "<operator>.conditional",
        "43": "slow",
        "44": "LITERAL",
        "45": "LITERAL",
        "46": "<operator>.conditional",
        "47": "fast",
        "48": "LITERAL",
        "49": "LITERAL",
        "50": "CONTROL_STRUCTURE",
        "51": "CONTROL_STRUCTURE",
        "52": "<operator>.logicalNot",
        "53": "slow",
        "54": "CONTROL_STRUCTURE",
        "55": "CONTROL_STRUCTURE",
        "56": "<operator>.notEquals",
        "57": "next_prime_number",
        "58": "last",
        "59": "x",
        "60": "BLOCK",
        "61": "pr_err",
        "62": "LITERAL",
        "63": "last",
        "64": "x",
        "65": "next_prime_number",
        "66": "last",
        "67": "CONTROL_STRUCTURE",
        "68": "<operator>.assignment",
        "69": "last",
        "70": "x",
        "71": "pr_info",
        "72": "LITERAL",
        "73": "__func__",
        "74": "x",
        "75": "last",
        "76": "RETURN",
        "77": "LITERAL",
        "78": "JUMP_TARGET",
        "79": "dump_primes",
        "80": "RETURN",
        "81": "<operator>.minus",
        "82": "EINVAL",
        "83": "METHOD_RETURN"
    }
}